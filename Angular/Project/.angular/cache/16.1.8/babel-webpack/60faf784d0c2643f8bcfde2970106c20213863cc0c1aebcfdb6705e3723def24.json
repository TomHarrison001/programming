{"ast":null,"code":"var _class;\nimport { map, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MediaItemService {\n  constructor(http) {\n    this.http = http;\n    this.mediaItems = [{\n      id: 1,\n      name: \"Saw\",\n      medium: \"Movie\",\n      category: \"Horror\",\n      year: 2004,\n      watchedOn: 1294166565384,\n      isFavourite: true\n    }, {\n      id: 2,\n      name: \"The Walking Dead\",\n      medium: \"Series\",\n      category: \"Horror\",\n      year: 2010,\n      watchedOn: 1294166565384,\n      isFavourite: true\n    }];\n  }\n  get(medium) {\n    const getOptions = {\n      params: {\n        medium\n      }\n    };\n    return this.http.get('mediaitems').pipe(map(response => {\n      return response.mediaItems;\n    }), catchError(this.handleError));\n  }\n  add(mediaItem) {\n    return this.http.post('mediaitems', mediaItem).pipe(catchError(this.handleError));\n  }\n  delete(mediaItem) {\n    return this.http.delete(`mediaitems/${mediaItem.id}`).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    console.log(error.message);\n    return throwError('A data error occured, please try again.');\n  }\n}\n_class = MediaItemService;\n_class.ɵfac = function MediaItemService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","catchError","throwError","MediaItemService","constructor","http","mediaItems","id","name","medium","category","year","watchedOn","isFavourite","get","getOptions","params","pipe","response","handleError","add","mediaItem","post","delete","error","console","log","message","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\tomha\\Documents\\Languages and Frameworks\\Angular\\Project\\src\\app\\media\\media-item-service\\media-item-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MediaItemService {\n  constructor(private http: HttpClient) {}\n\n  mediaItems = [\n    {\n      id: 1,\n      name: \"Saw\",\n      medium: \"Movie\",\n      category: \"Horror\",\n      year: 2004,\n      watchedOn: 1294166565384,\n      isFavourite: true,\n    },\n    {\n      id: 2,\n      name: \"The Walking Dead\",\n      medium: \"Series\",\n      category: \"Horror\",\n      year: 2010,\n      watchedOn: 1294166565384,\n      isFavourite: true,\n    },\n  ];\n\n  get(medium: any) {\n    const getOptions = {\n      params: { medium },\n    };\n    return this.http.get<MediaItemsResponse>('mediaitems').pipe(\n      map((response: MediaItemsResponse) => {\n        return response.mediaItems;\n      }),\n      catchError(this.handleError)\n    );\n  }\n\n  add(mediaItem: any) {\n    return this.http\n      .post('mediaitems', mediaItem)\n      .pipe(catchError(this.handleError));\n  }\n\n  delete(mediaItem: any) {\n    return this.http\n      .delete(`mediaitems/${mediaItem.id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.log(error.message);\n    return throwError('A data error occured, please try again.');\n  }\n}\n\ninterface MediaItemsResponse {\n  mediaItems: MediaItem[];\n}\n\nexport interface MediaItem {\n  id: number;\n  name: string;\n  medium: string;\n  category: string;\n  year: number;\n  watchedOn: number;\n  isFavorite: boolean;\n}\n"],"mappings":";AAEA,SAASA,GAAG,EAAEC,UAAU,QAAQ,gBAAgB;AAChD,SAASC,UAAU,QAAQ,MAAM;;;AAKjC,OAAM,MAAOC,gBAAgB;EAC3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,UAAU,GAAG,CACX;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,KAAK;MACXC,MAAM,EAAE,OAAO;MACfC,QAAQ,EAAE,QAAQ;MAClBC,IAAI,EAAE,IAAI;MACVC,SAAS,EAAE,aAAa;MACxBC,WAAW,EAAE;KACd,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,kBAAkB;MACxBC,MAAM,EAAE,QAAQ;MAChBC,QAAQ,EAAE,QAAQ;MAClBC,IAAI,EAAE,IAAI;MACVC,SAAS,EAAE,aAAa;MACxBC,WAAW,EAAE;KACd,CACF;EArBsC;EAuBvCC,GAAGA,CAACL,MAAW;IACb,MAAMM,UAAU,GAAG;MACjBC,MAAM,EAAE;QAAEP;MAAM;KACjB;IACD,OAAO,IAAI,CAACJ,IAAI,CAACS,GAAG,CAAqB,YAAY,CAAC,CAACG,IAAI,CACzDjB,GAAG,CAAEkB,QAA4B,IAAI;MACnC,OAAOA,QAAQ,CAACZ,UAAU;IAC5B,CAAC,CAAC,EACFL,UAAU,CAAC,IAAI,CAACkB,WAAW,CAAC,CAC7B;EACH;EAEAC,GAAGA,CAACC,SAAc;IAChB,OAAO,IAAI,CAAChB,IAAI,CACbiB,IAAI,CAAC,YAAY,EAAED,SAAS,CAAC,CAC7BJ,IAAI,CAAChB,UAAU,CAAC,IAAI,CAACkB,WAAW,CAAC,CAAC;EACvC;EAEAI,MAAMA,CAACF,SAAc;IACnB,OAAO,IAAI,CAAChB,IAAI,CACbkB,MAAM,CAAC,cAAcF,SAAS,CAACd,EAAE,EAAE,CAAC,CACpCU,IAAI,CAAChB,UAAU,CAAC,IAAI,CAACkB,WAAW,CAAC,CAAC;EACvC;EAEQA,WAAWA,CAACK,KAAwB;IAC1CC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC1B,OAAOzB,UAAU,CAAC,yCAAyC,CAAC;EAC9D;;SAnDWC,gBAAgB;;mBAAhBA,MAAgB,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhB5B,MAAgB;EAAA6B,OAAA,EAAhB7B,MAAgB,CAAA8B,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}