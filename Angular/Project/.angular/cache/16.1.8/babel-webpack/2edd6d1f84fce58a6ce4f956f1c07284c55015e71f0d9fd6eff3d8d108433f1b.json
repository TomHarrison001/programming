{"ast":null,"code":"import { HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nexport class MockXhrBackend {\n  constructor() {\n    this.mediaItems = [{\n      id: 1,\n      name: \"Saw\",\n      medium: \"Movie\",\n      category: \"Horror\",\n      year: 2004,\n      watchedOn: 1294166565384,\n      isFavourite: true\n    }, {\n      id: 2,\n      name: \"The Walking Dead\",\n      medium: \"Series\",\n      category: \"Horror\",\n      year: 2010,\n      watchedOn: 1294166565384,\n      isFavourite: true\n    }];\n  }\n  handle(request) {\n    return new Observable(responseObserver => {\n      let responseOptions;\n      switch (request.method) {\n        case 'GET':\n          if (request.urlWithParams.indexOf('mediaitems?medium=') >= 0 || request.url === 'mediaitems') {\n            let medium;\n            if (request.urlWithParams.indexOf('?') >= 0) {\n              medium = request.urlWithParams.split('=')[1];\n              if (medium === 'undefined') {\n                medium = '';\n              }\n            }\n            let mediaItems;\n            if (medium) {\n              mediaItems = this.mediaItems.filter(i => i.medium === medium);\n            } else {\n              mediaItems = this.mediaItems;\n            }\n            responseOptions = {\n              body: {\n                mediaItems: JSON.parse(JSON.stringify(mediaItems))\n              },\n              status: 200\n            };\n          } else {\n            let mediaItems;\n            const idToFind = parseInt(request.url.split('/')[1], 10);\n            mediaItems = this.mediaItems.filter(i => i.id === idToFind);\n            responseOptions = {\n              body: JSON.parse(JSON.stringify(mediaItems[0])),\n              status: 200\n            };\n          }\n          break;\n        case 'POST':\n          const mediaItem = request.body;\n          mediaItem.id = this._getNewId();\n          this.mediaItems.push(mediaItem);\n          responseOptions = {\n            status: 201\n          };\n          break;\n        case 'DELETE':\n          const id = parseInt(request.url.split('/')[1], 10);\n          this._deleteMediaItem(id);\n          responseOptions = {\n            status: 200\n          };\n      }\n      const responseObject = new HttpResponse(responseOptions);\n      responseObserver.next(responseObject);\n      responseObserver.complete();\n      return () => {};\n    });\n  }\n  _deleteMediaItem(id) {\n    const mediaItem = this.mediaItems.find(i => i.id === id);\n    const index = this.mediaItems.indexOf(mediaItem);\n    if (index >= 0) {\n      this.mediaItems.splice(index, 1);\n    }\n  }\n  _getNewId() {\n    if (this.mediaItems.length > 0) {\n      return Math.max.apply(Math, this.mediaItems.map(mediaItem => mediaItem.id)) + 1;\n    } else {\n      return 1;\n    }\n  }\n}","map":{"version":3,"names":["HttpResponse","Observable","MockXhrBackend","constructor","mediaItems","id","name","medium","category","year","watchedOn","isFavourite","handle","request","responseObserver","responseOptions","method","urlWithParams","indexOf","url","split","filter","i","body","JSON","parse","stringify","status","idToFind","parseInt","mediaItem","_getNewId","push","_deleteMediaItem","responseObject","next","complete","find","index","splice","length","Math","max","apply","map"],"sources":["D:\\Homework\\Languages and Frameworks\\Angular\\Project\\src\\app\\media\\mock-xhr-backend.ts"],"sourcesContent":["import { HttpEvent, HttpRequest, HttpResponse, HttpBackend } from '@angular/common/http';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nexport class MockXhrBackend implements HttpBackend {\r\n  private mediaItems = [\r\n    {\r\n      id: 1,\r\n      name: \"Saw\",\r\n      medium: \"Movie\",\r\n      category: \"Horror\",\r\n      year: 2004,\r\n      watchedOn: 1294166565384,\r\n      isFavourite: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"The Walking Dead\",\r\n      medium: \"Series\",\r\n      category: \"Horror\",\r\n      year: 2010,\r\n      watchedOn: 1294166565384,\r\n      isFavourite: true,\r\n    },\r\n  ];\r\n\r\n  handle(request: HttpRequest<any>): Observable<HttpEvent<any>> {\r\n    return new Observable((responseObserver: Observer<HttpResponse<any>>) => {\r\n      let responseOptions;\r\n      switch (request.method) {\r\n        case 'GET':\r\n          if (request.urlWithParams.indexOf('mediaitems?medium=') >= 0 || request.url === 'mediaitems') {\r\n            let medium: any;\r\n            if (request.urlWithParams.indexOf('?') >= 0) {\r\n              medium = request.urlWithParams.split('=')[1];\r\n              if (medium === 'undefined') { medium = ''; }\r\n            }\r\n            let mediaItems;\r\n            if (medium) {\r\n              mediaItems = this.mediaItems.filter(i => i.medium === medium);\r\n            } else {\r\n              mediaItems = this.mediaItems;\r\n            }\r\n            responseOptions = {\r\n              body: {mediaItems: JSON.parse(JSON.stringify(mediaItems))},\r\n              status: 200\r\n            };\r\n          } else {\r\n            let mediaItems;\r\n            const idToFind = parseInt(request.url.split('/')[1], 10);\r\n            mediaItems = this.mediaItems.filter(i => i.id === idToFind);\r\n            responseOptions = {\r\n              body: JSON.parse(JSON.stringify(mediaItems[0])),\r\n              status: 200\r\n            };\r\n          }\r\n          break;\r\n        case 'POST':\r\n          const mediaItem = request.body;\r\n          mediaItem.id = this._getNewId();\r\n          this.mediaItems.push(mediaItem);\r\n          responseOptions = {status: 201};\r\n          break;\r\n        case 'DELETE':\r\n          const id = parseInt(request.url.split('/')[1], 10);\r\n          this._deleteMediaItem(id);\r\n          responseOptions = {status: 200};\r\n      }\r\n\r\n      const responseObject = new HttpResponse(responseOptions);\r\n      responseObserver.next(responseObject);\r\n      responseObserver.complete();\r\n      return () => {\r\n      };\r\n    });\r\n  }\r\n\r\n  _deleteMediaItem(id: number) {\r\n    const mediaItem: any = this.mediaItems.find(i => i.id === id);\r\n    const index = this.mediaItems.indexOf(mediaItem);\r\n    if (index >= 0) {\r\n      this.mediaItems.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  _getNewId() {\r\n    if (this.mediaItems.length > 0) {\r\n      return Math.max.apply(Math, this.mediaItems.map(mediaItem => mediaItem.id)) + 1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}